/*
 * Copyright 2010 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.acme.planning.housecleaning;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import com.acme.planning.model.House;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################



rule "Conflict: 1 cleaner has to clean 2 houses on the same day of week"
when
   House($c : cleaner, $d : office.dayOfweek, $leftId : id)
   House(cleaner == $c, dayOfWeek == $d, id > $leftId)
then
   scoreholder.addHardConstraintMatch(kcontext, -1);
end

// ############################################################################
// Soft constraints
// ############################################################################

rule "Minimize traveling distance"
when
   House($d : house.location.getDistance(cleaner.home)))
then
   scoreholder.addSoftConstraintMatch(kcontext, - $d);
end
