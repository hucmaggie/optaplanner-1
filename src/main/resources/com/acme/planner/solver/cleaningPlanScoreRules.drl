package com.acme.planning.housecleaning;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import com.acme.planning.model.HouseCleaningSpot;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################
rule "Conflict: 1 cleaner has to clean 2 houses on the same day of week"
when
   HouseCleaningSpot($c : cleaner, $d : house.dayOfWeek.dayId, $leftId : id)
   HouseCleaningSpot(cleaner == $c, house.dayOfWeek.dayId == $d, id > $leftId)
then
   scoreHolder.addHardConstraintMatch(kcontext, -1);
end


// ############################################################################
// Soft constraints
// ############################################################################
//rule "Minimize traveling distance"
//when
  // House($d : houseLocation.getDistance())
//then
  // scoreHolder.addSoftConstraintMatch(kcontext, - $d);
//end
