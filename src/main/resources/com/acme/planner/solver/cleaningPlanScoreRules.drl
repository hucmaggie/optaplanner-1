package com.acme.planning.housecleaning;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import com.acme.planning.model.House;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################
rule "Conflict: 1 cleaner has to clean 2 houses on the same day of week"
when
   House($c : cleaner, $d : office.dayOfweek, $leftId : id)
   House(cleaner == $c, dayOfWeek == $d, id > $leftId)
then
   scoreholder.addHardConstraintMatch(kcontext, -1);
end

// ############################################################################
// Soft constraints
// ############################################################################

rule "Minimize traveling distance"
when
   House($d : house.location.getDistance(cleaner.home)))
then
   scoreholder.addSoftConstraintMatch(kcontext, - $d);
end
